#!/bin/bash

# Check we are root
if test "$(id -u)" -ne 0 ; then
	echo "${0} can only be run as root"
	exit 1
fi

# The "SETUP" variable will be read from /etc/default/minimal-ec2-os-setup
if test "${RUN_SETUP}" != "true" ; then
	exit 0
fi

# Attempt to grow the partition
lsblk -no NAME,PKNAME "$(findmnt -no SOURCE /)" | {
	read PART_DEV DISK
	PART_NUM="$(cat /sys/class/block/${PART_DEV}/partition)"
	growpart -N "/dev/${DISK}" "${PART_NUM}" > /dev/null 2>&1 && {
		echo "* Growing ${PART_DEV} partition"
		growpart "/dev/${DISK}" "${PART_NUM}" && resize2fs "/dev/${PART_DEV}"
	}
}

# Check for proper /etc/hostname and /etc/hosts
test -f /etc/hostname -a -f /etc/hosts || {
	HOSTNAME_FULL="$(curl -s "http://169.254.169.254/latest/meta-data/hostname")"
	HOSTNAME_SHORT="$(echo "${HOSTNAME_FULL}" | cut -d. -f1)"

	hostname "${HOSTNAME_SHORT}"

	test -f /etc/hostname || {
		echo "* Generating /etc/hostname"
		echo "${HOSTNAME_SHORT}" > /etc/hostname
	}

	test -f /etc/hosts || {
		echo "* Generating /etc/hosts"
		cat > /etc/hosts <<- EOF
		127.0.0.1	localhost
		127.0.1.1	${HOSTNAME_FULL}	${HOSTNAME_SHORT}
		EOF
	}
}

# Test for proper /home/ubuntu/.ssh/
test -f /home/ubuntu/.ssh/authorized_keys || {
	echo "* Configuring ubuntu user SSH keys"
	mkdir -p /home/ubuntu/.ssh
	curl -s "http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key" > /home/ubuntu/.ssh/authorized_keys
	chown -R ubuntu:ubuntu /home/ubuntu
	chmod -R go-rwx /home/ubuntu/.ssh
}

# Make sure SSH has keys
for KEY in $(cat /etc/ssh/sshd_config | grep -E '^#?HostKey' | cut -d\  -f2) ; do
	test -f "${KEY}" && continue

	ALGO="$(basename "${KEY}" | sed -E 's|^ssh_host_(.*)_key$|\1|g')"
	echo "* Creating ${ALGO} SSH server key"
	ssh-keygen -q -f "${KEY}" -N '' -t "${ALGO}"
done

# Ensure we won't be running again on startup
test -f /etc/default/minimal-ec2-os-setup && {
	sed -i 's|^RUN_SETUP=.*$|RUN_SETUP=false|g' /etc/default/minimal-ec2-os-setup
}
